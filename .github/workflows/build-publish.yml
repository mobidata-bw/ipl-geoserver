name: build & publish Docker image

on:
  push:
    branches:
      - main

jobs:
  build-publish:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: set up Docker buildx
      uses: docker/setup-buildx-action@v3

    - name: log into the GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: build and push Docker image
      uses: docker/build-push-action@v5
      with:
        load: true
        tags: ghcr.io/${{ github.repository }}:ci
        # todo: add linux/arm64 once it is supported by the upstream/base image
        platforms: linux/amd64
        # https://docs.docker.com/build/ci/github-actions/cache/#cache-backend-api
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: compute Docker image tag
      id: docker-tags
      # We don't have upstream/base image's tag (or GeoServer version contained, which should be the same) available as a variables, so we must pull it from the image.
      # todo: find a cleaner solution
      run: |
        set -e
        set -x

        # https://stackoverflow.com/questions/1682442/reading-java-properties-file-from-bash#comment59733051_22857672
        # https://stackoverflow.com/a/12524345/1072129
        geoserver_version="$(
          docker run --rm \
            'ghcr.io/${{ github.repository }}:ci' \
            /bin/cat \
            /usr/local/tomcat/webapps/geoserver/META-INF/maven/org.geoserver.web/gs-web-app/pom.properties \
            | sed '/^version=/!d; s///' | tr -d '\n'
        )"

        echo "tag=$geoserver_version" >>$GITHUB_OUTPUT

    - name: build and push Docker image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ghcr.io/${{ github.repository }}:${{ steps.docker-tags.outputs.tag }}
        platforms: linux/amd64
        # https://docs.docker.com/build/ci/github-actions/cache/#cache-backend-api
        cache-from: type=gha
        cache-to: type=gha,mode=max
